/* Refere-se ao css do index */

/*.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
  }
  
  .switch input { 
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
  }
  
  .slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
  }
  
  input:checked + .slider {
    background-color: #2196F3;
  }
  
  input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
  }
  
  input:checked + .slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
  }*/
  
  /* Rounded sliders */
  /*.slider.round {
    border-radius: 34px;
  }
  
  .slider.round:before {
    border-radius: 50%;
  }*/

/* Todos os elementos (*) */
* {
    /*  -> Margin / Margem - Espaçamento fora do conteúdo.
        -> Padding / Preenchimento - Espaçamento dentro dos limites do conteúdo.

        Hierarquia (de fora até chegar ao conteúdo):
            Margin Box
            Border Box
            Padding Box
            Element Box ( O elemento em si, div, span, entre outros )
        https://pt.stackoverflow.com/questions/189978/qual-a-diferen%C3%A7a-entre-padding-e-margin-no-css 
       
    Retirada de todos os espaçamentos dos elementos, ou seja, para realizar uma customização deles. */
    padding: 0;
    margin: 0;
    border: 0;
}

/*  class -> . 
    id=   -> # */

header {
    position: absolute;
    z-index: 5;
}
.dropdown {
    display: inline-block;
    position: relative;
  }
  .dropdown-content {
    display: none;
    position: absolute;
    width: 100%;
    overflow: auto;
    box-shadow: 0px 10px 10px 0px rgba(0,0,0,0.4);
  }
  .dropdown:hover .dropdown-content {
    display: block;
  }
  .dropdown-content a {
    display: block;
    color: #000000;
    padding: 5px;
    text-decoration: none;
  }
  .dropdown-content a:hover {
    color: #FFFFFF;
    background-color: #00A4BD;
  }
/* Fonte: https://blog.hubspot.com/website/html-dropdown#:~:text=A%20drop%2Ddown%20menu%20is,user%20disengages%20from%20the%20menu. */

.menu li {
    /* Altura da linha (line-height): */
    /*line-height: 50px; */

    /* Mostra os elementos alinhados na horizontal (display: inline) */
    display: inline;

    /* Alinha os elementos verticalmente no meio (vertical-align: middle) */
    vertical-align: middle;

    padding-left: 3.75vw; /* vw - view width (largura [porcentagem total] da tela do usuário)
                            -> auxilia ao site ser responsivo
    (neste padding, ele mexe de cada elemento <li>) */

    /*  Fontes: line-height: https://www.w3schools.com/cssref/pr_dim_line-height.asp
                vw (view width): https://www.horadecodar.com.br/2020/03/19/como-fazer-uma-div-com-altura-e-largura-da-tela-do-usuario/
                Geral:  https://www.clubedohardware.com.br/forums/topic/1451109-alinhar-objetos-de-uma-li/ */
}

/* Todos os <ul> dentro da class="menu" */ 
.menu ul {

    /* Altura do <ul> (vh - view height: altura [porcentagem total] da tela do usuário) 
    -> O mesmo objetivo se aplica ao view height: auxilia ao site ser responsivo */
    height: 15vh;

    /* Fonte: vh (view height): https://www.horadecodar.com.br/2020/03/19/como-fazer-uma-div-com-altura-e-largura-da-tela-do-usuario/*/
}

/* Logotipo DoIn (imagem) */
.logotype {

    /*Altura do logotipo DoIn (imagem) */
    height: 15vh;
}

/* Lupa de pesquisa (imagem) */
.symbol {

    /*Altura da lupa de pesquisa (imagem) */
    height: 3.75vh;
} 

/* Cabeçalho 
header {
    background-color: blueviolet; /* MODIFICAR COR (placeholder) */

    /*Altura total que o <header> irá ocupar na tela */
    /*height: 15.5vh;
}*/

/* Introdução de um gif (logo do DoIn) ao abrir o index do site */
#introduction {

    /* Posição dos elementos no site; quebra o padrão de posição estabelecido por cada elemento do html
        Fixed: elementos fixados de acordo com o tamanho da tela do computador/celular */
    position: fixed;

    /* Serve para ordenar os elementos da página (qual elemento irá sobrepor a outra. OBS: por conta do position: fixed) 
    No caso, a <div> e seus elementos sobrepõem todo o restante do site (header, section, footer) */
    z-index: 50;

    /* Tamanho que os elementos da <div> id="introduction" e ela própria poderão ocupar no espaço da tela */
    top: 0;
    left: 0;
    width: 100%; /* 100 % da tela */
    height: 100%;

    /* Opacidade */
    opacity: 1;
    
    /* Cor de fundo */
    background-color: #D1EAFF;

    /* Imagem de fundo (sobrepõe o background-color) */
    background-image: url("../img/doin_introduction.gif"); /* .. - serve para sair da pasta */
    background-size: 500px 500px; /* Tamanho da imagem de fundo no site */
    background-position: center; /* Posição da imagem de fundo (centro) */
    background-repeat: no-repeat; /* Não há repetição da imagem caso ela não compor a tela inteira */

    /* Fontes:  Geral: https://pt.stackoverflow.com/questions/66039/como-colocar-uma-gif-antes-de-exibir-a-p%C3%A1gina-do-site/67568#67568
                Código estudado e implementado: http://jsfiddle.net/SamirChaves/6ns0grm0/2/
                Videoaula sobre position e z-index: https://pt.khanacademy.org/computing/computer-programming/html-css/css-layout-properties/pt/css-position */
}

/* Duas imagens sobre "Importância da Troca e Doação" (elemento <div>) */
.slogan {
    
    /* Posição dos elementos no site; quebra o padrão de posição estabelecido por cada elemento do html
        Relative: a <div> class="container" não possuirá a posição padrão imposto pelo site,
        portanto, não desarrumando a identação/visual ao diminuir o tamanho da tela.
        Além disso, NÃO IRÁ SOBREPOR elementos, fazendo com que um fique debaixo/após do outro. */
    position: relative;
    
    /* Alinha os elementos de imagem no centro verticalmente (para isso, o display: flex) 
    Fonte: https://www.freecodecamp.org/portuguese/news/como-centralizar-uma-imagem-na-vertical-e-na-horizontal-com-css/#:~:text=Outra%20forma%20de%20centralizar%20uma,que%20voc%C3%AA%20tamb%C3%A9m%20precisar%C3%A1%20usar. */
    display: flex;
    justify-content: center;

    /*Altura da <div> class="slogan" */
    height: 84.5vh;

    /* Imagem de fundo (sem repetição) */
    background-color: blue;
}

.slogan img {
    position: absolute;
    height: 42.25vh;
    z-index: 1;
}

#img {
    top: 42.25vh;
}

.slogan label {
    /* Posição dos elementos no site; quebra o padrão de posição estabelecido por cada elemento do html
        Relative: a <div> class="container" não possuirá a posição padrão imposto pelo site e também
        haverá a SOBREPOSIÇÃO de elementos, fazendo com que um fique sobreposto a outro. Porém, poderá
        desarrumar a identação/visual ao diminuir o tamanho da tela. 
    Fonte: https://www.devmedia.com.br/como-usar-a-propriedade-position-css/24451 */
    position: absolute;

    /* Texto alinhado verticalmente (centro) */
    text-align: center;
}

#text_doacao {
    font-size: 5vh;
    top: 21vh;
    z-index: 2;
}

#text_troca {
    font-size: 5vh;
    top: 62.75vh;
    z-index: 2;
}
/* Fonte: https://pt.stackoverflow.com/questions/106102/como-posicionar-texto-dentro-de-uma-imagem#:~:text=3%20Respostas&text=Primeiro%20voc%C3%AA%20deve%20colocar%20ambos,%2C%20bottom%20e%2Fou%20left%20. */



/* Coisas talvez uteis:
https://www.hostinger.com.br/tutoriais/criar-site-responsivo-css
https://www.maujor.com/tutorial/propriedades-css-para-estilizacao-de-listas.php */

/* Talvez lixo:
                  <ul class="dropdown-menu clearfix" 
                    role="menu">
                        <li><a href="#">Design</a><li>
                        <li><a href="#">Development</a><li>
                        <li><a href="#">Marketing</a><li>
                    </ul> 
                </li>

                <div class="dropdown show">
                    <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                      Dropdown link
                    </a>
                  
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                      <a class="dropdown-item" href="#">Action</a>
                      <a class="dropdown-item" href="#">Another action</a>
                      <a class="dropdown-item" href="#">Something else here</a>
                    </div>
                  </div> 
.dropdown:hover .dropdown-menu {
    display: bloco;
}
*/